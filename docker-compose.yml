
services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  orders-service:
    build:
      context: ./OrdersService
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    environment:
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=ordersdb;Username=postgres;Password=postgres"
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5001:8080"
      
  payments-service:
    build:
      context: ./PaymentsService
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    environment:
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=payments_db;Username=postgres;Password=postgres"
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5002:8080"

volumes:
  pgdata:
